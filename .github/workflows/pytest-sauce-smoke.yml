name: YuvanBank UI Tests (Sauce Labs)

on:
  push:
    branches: [ main, master ]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    runs-on: ubuntu-latest

    # Matrix controls browser & test type (tag/marker)
    strategy:
      fail-fast: false
      matrix:
        include:
          # --- Chrome Smoke ---
          - browser: chrome
            tag: smoke
            marker: smoke
          # --- Chrome Regression ---
          - browser: chrome
            tag: regression
            marker: regression
          # --- Chrome Functional ---
          - browser: chrome
            tag: functional
            marker: functional

          # To run Firefox/Edge too, add entries like:
          # - browser: firefox
          #   tag: smoke
          #   marker: smoke
          # - browser: edge
          #   tag: regression
          #   marker: regression

    env:
      # üîê Sauce credentials
      SAUCE_USERNAME: ${{ secrets.SAUCE_UNAME }}
      SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_KEY }}

      # üß™ DriverFactory / pytest parameters
      REMOTE_DRIVER: sauce
      SAUCE_PLATFORM: Windows 11
      SAUCE_VERSION: latest
      SAUCE_REGION: eu # "eu" normalized to eu-central-1 in your DriverFactory
      SAUCE_BUILD: "${{ github.ref_name }} #${{ github.run_number }}"
      # Show tag + browser in name (nice in Sauce dashboard)
      SAUCE_NAME: "YuvanBank ${{ matrix.tag }} UI - ${{ matrix.browser }} @ ${{ github.sha }}"
      # Send dynamic tag to Sauce; keep a few stable ones too
      SAUCE_TAGS: "pytest,gha,${{ matrix.tag }},ui,yuvanbank"

      # Optional: headless for CI (ignored by Sauce but fine for grids)
      HEADLESS: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install -U pytest selenium pytest-xdist allure-pytest python-dotenv

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV

      - name: Verify Sauce credentials
        run: |
          test -n "${SAUCE_USERNAME}" || (echo "‚ùå SAUCE_USERNAME missing"; exit 1)
          test -n "${SAUCE_ACCESS_KEY}" || (echo "‚ùå SAUCE_ACCESS_KEY missing"; exit 1)
          echo "‚úÖ Sauce credentials available"

      # üëâ Adjust the test path and -m selector as needed for your repo
      - name: Run ${{ matrix.tag }} tests on Sauce Labs (${{ matrix.browser }})
        run: |
          mkdir -p reports allure-results
          echo "Running marker: ${{ matrix.marker }}"
          pytest -v tests \
            -m "${{ matrix.marker }}" \
            --remote \
            --cloud saucelabs \
            --browser "${{ matrix.browser }}" \
            --headless \
            --sauce-region eu \
            --junitxml="reports/junit-${{ matrix.browser }}-${{ matrix.tag }}.xml"

      - name: Upload JUnit XML
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: "junit-${{ matrix.browser }}-${{ matrix.tag }}"
          path: reports/*.xml

      - name: Upload Allure Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: "allure-results-${{ matrix.browser }}-${{ matrix.tag }}"
          path: allure-results
          if-no-files-found: ignore
