name: UI Tests – Manual (Sauce Labs, Regression on Chrome)

on:
  workflow_dispatch:
    inputs:
      tests_path:
        description: "Pytest path (folder/file::test)"
        type: string
        default: "tests"
      region:
        description: "Sauce region"
        type: choice
        options: [us-west-1, eu-central-1, apac-southeast-1]
        default: eu-central-1
      sauce_platform:
        description: "Platform name"
        type: string
        default: "Windows 11"
      headless:
        description: "Headless (true/false)"
        type: boolean
        default: true
      workers:
        description: "pytest -n (xdist) workers (0 to disable)"
        type: number
        default: 2

concurrency:
  group: ${{ github.workflow }}-${{ github.run_id }}
  cancel-in-progress: false

jobs:
  run:
    runs-on: ubuntu-latest

    env:
      # Sauce creds from repo secrets
      SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
      SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
      # Common env for your framework (read by your CLI flags)
      SAUCE_PLATFORM: ${{ inputs.sauce_platform }}
      SAUCE_VERSION: latest
      SAUCE_REGION: ${{ inputs.region }}
      HEADLESS: ${{ inputs.headless }}
      # Fixed for this workflow
      BROWSER: chrome
      MARKER: regression

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install -U pytest selenium pytest-xdist allure-pytest python-dotenv

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV

      - name: Verify Sauce credentials
        run: |
          test -n "${SAUCE_USERNAME}" || (echo "❌ SAUCE_USERNAME missing"; exit 1)
          test -n "${SAUCE_ACCESS_KEY}" || (echo "❌ SAUCE_ACCESS_KEY missing"; exit 1)
          echo "✅ Sauce credentials available"

      - name: Create result folders
        run: |
          mkdir -p reports
          mkdir -p allure-results

      - name: Run Pytest (regression on Chrome)
        shell: bash
        run: |
          set -euo pipefail

          # Build optional args
          ARGS=()
          if [[ -n "${MARKER:-}" && "${MARKER,,}" != "all" ]]; then
            ARGS+=(-m "${MARKER}")
          fi

          if [[ "${{ inputs.workers }}" != "0" ]]; then
            ARGS+=(-n "${{ inputs.workers }}")
          fi

          if [[ "${HEADLESS,,}" == "true" || "${HEADLESS}" == "1" ]]; then
            ARGS+=(--headless)
          fi

          # Full command
          CMD=(
            pytest -v "${{ inputs.tests_path }}"
            "${ARGS[@]}"
            --remote --cloud saucelabs
            --browser "${BROWSER}"
            --sauce-region "${SAUCE_REGION}"
            --junitxml "reports/junit-${BROWSER}-${MARKER}.xml"
            --alluredir "allure-results/${BROWSER}-${MARKER}"
          )

          printf 'CMD: %q ' "${CMD[@]}"; echo
          "${CMD[@]}"
      

      - name: Upload JUnit XML
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: "junit-regression-chrome"
          path: reports/*.xml
          if-no-files-found: ignore

      - name: Upload Allure Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: "allure-results-regression-chrome"
          path: allure-results
          if-no-files-found: ignore
