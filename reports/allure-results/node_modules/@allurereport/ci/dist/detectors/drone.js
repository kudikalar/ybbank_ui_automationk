import { CiType } from "@allurereport/core-api";
import { getEnv } from "../utils.js";
export const getJobRunUID = () => getEnv("CI_BUILD_NUMBER");
export const getJobRunURL = () => getEnv("DRONE_BUILD_LINK");
export const getJobURL = () => {
    const jobRunURL = getJobRunURL();
    const jobRunUID = getJobRunUID();
    return jobRunURL.replace(jobRunUID, "");
};
export const drone = {
    type: CiType.Drone,
    get detected() {
        return getEnv("DRONE_SYSTEM_HOST") !== "";
    },
    get jobUid() {
        return getEnv("DRONE_REPO");
    },
    get jobUrl() {
        return getJobURL();
    },
    get jobName() {
        return getEnv("DRONE_REPO");
    },
    get jobRunUid() {
        return getJobRunUID();
    },
    get jobRunUrl() {
        return getJobRunURL();
    },
    get jobRunName() {
        return getEnv("DRONE_BUILD_NUMBER");
    },
    get jobRunBranch() {
        return getEnv("DRONE_BRANCH");
    },
    get pullRequestUrl() {
        const githubServer = getEnv("DRONE_GITHUB_SERVER");
        const gitlabServer = getEnv("DRONE_GITLAB_SERVER");
        const repoLink = getEnv("DRONE_REPO_LINK");
        const pullRequestNumber = getEnv("DRONE_PULL_REQUEST");
        if (repoLink.startsWith(githubServer)) {
            return `${repoLink}/pull/${pullRequestNumber}`;
        }
        if (repoLink.startsWith(gitlabServer)) {
            return `${repoLink}/-/merge_requests/${pullRequestNumber}`;
        }
        return "";
    },
    get pullRequestName() {
        return getEnv("DRONE_PULL_REQUEST_TITLE");
    },
};
