import type { TestStatus } from "../model.js";
export declare enum ChartType {
    Trend = "trend",
    Pie = "pie",
    TreeMap = "treemap",
    HeatMap = "heatmap",
    Bar = "bar",
    Funnel = "funnel"
}
export declare enum ChartDataType {
    Status = "status",
    Severity = "severity"
}
export declare enum ChartMode {
    Raw = "raw",
    Percent = "percent"
}
export type ChartId = string;
export type TrendPointId = string;
export type TrendSliceId = string;
export type BaseMetadata = Record<string, unknown>;
export interface BaseTrendSliceMetadata extends BaseMetadata {
    executionId: string;
    executionName?: string;
}
export interface TrendPoint {
    x: string;
    y: number;
}
export type TrendSliceMetadata<Metadata extends BaseMetadata> = BaseTrendSliceMetadata & Metadata;
export interface TrendSlice<Metadata extends BaseTrendSliceMetadata = BaseTrendSliceMetadata> {
    min: number;
    max: number;
    metadata: TrendSliceMetadata<Metadata>;
}
export interface BasePieSlice {
    status: TestStatus;
    count: number;
}
export interface PieSlice extends BasePieSlice {
    d: string | null;
}
export type PieChartValues = {
    percentage: number;
    slices: PieSlice[];
};
