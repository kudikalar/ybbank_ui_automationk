import type { Config } from "@allurereport/plugin-api";
import type { FullConfig, PluginInstance } from "./api.js";
export declare const getPluginId: (key: string) => string;
export declare const findConfig: (cwd: string, configPath?: string) => Promise<string | undefined>;
export interface ConfigOverride {
    name?: Config["name"];
    output?: Config["output"];
    historyPath?: Config["historyPath"];
    knownIssuesPath?: Config["knownIssuesPath"];
    plugins?: Config["plugins"];
}
export declare const validateConfig: (config: Config) => {
    valid: boolean;
    fields: string[];
};
export declare const loadConfig: (configPath: string) => Promise<Config>;
export declare const resolveConfig: (config: Config, override?: ConfigOverride) => Promise<FullConfig>;
export declare const readConfig: (cwd?: string, configPath?: string, override?: ConfigOverride) => Promise<FullConfig>;
export declare const getPluginInstance: (config: FullConfig, predicate: (plugin: PluginInstance) => boolean) => PluginInstance | undefined;
export declare const resolvePlugin: (path: string) => Promise<any>;
