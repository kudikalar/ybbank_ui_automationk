import type { PluginState, ReportFiles } from "@allurereport/plugin-api";
export declare class DefaultPluginState implements PluginState {
    #private;
    constructor(state: Record<string, any>);
    set: (key: string, value: any) => Promise<void>;
    get: <T>(key: string) => Promise<T>;
    unset: (key: string) => Promise<void>;
}
export declare class PluginFiles implements ReportFiles {
    #private;
    readonly callback?: ((key: string, path: string) => void) | undefined;
    constructor(parent: ReportFiles, pluginId: string, callback?: ((key: string, path: string) => void) | undefined);
    addFile: (key: string, data: Buffer) => Promise<string>;
}
export declare class InMemoryReportFiles implements ReportFiles {
    #private;
    addFile: (path: string, data: Buffer) => Promise<string>;
}
export declare class FileSystemReportFiles implements ReportFiles {
    #private;
    constructor(output: string);
    addFile: (path: string, data: Buffer) => Promise<string>;
}
