import { ChartType } from "@allurereport/core-api";
import { generateComingSoonChart, generatePieChart, generateTrendChart, } from "@allurereport/plugin-api";
import { randomUUID } from "crypto";
export const generateCharts = async (options, context, stores) => {
    const { charts } = options;
    if (!charts) {
        return undefined;
    }
    return charts.reduce((acc, chartOptions) => {
        const chartId = randomUUID();
        let chart;
        if (chartOptions.type === ChartType.Trend) {
            chart = generateTrendChart(chartOptions, stores, context);
        }
        else if (chartOptions.type === ChartType.Pie) {
            chart = generatePieChart(chartOptions, stores);
        }
        else if ([ChartType.HeatMap, ChartType.Bar, ChartType.Funnel, ChartType.TreeMap].includes(chartOptions.type)) {
            chart = generateComingSoonChart(chartOptions);
        }
        if (chart) {
            acc[chartId] = chart;
        }
        return acc;
    }, {});
};
export const generateAllCharts = async (writer, options, context, stores) => {
    const charts = await generateCharts(options, context, stores);
    if (charts && Object.keys(charts).length > 0) {
        await writer.writeWidget("charts.json", charts);
    }
};
