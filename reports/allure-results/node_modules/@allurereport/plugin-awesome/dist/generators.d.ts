import { type AttachmentLink, type EnvironmentItem, type Statistic, type TestEnvGroup, type TestError, type TestResult } from "@allurereport/core-api";
import { type AllureStore, type ExitCode, type ReportFiles, type ResultFile, type TestResultFilter } from "@allurereport/plugin-api";
import type { AwesomeTestResult } from "@allurereport/web-awesome";
import type { AwesomeOptions, TemplateManifest } from "./model.js";
import type { AwesomeDataWriter, ReportFile } from "./writer.js";
export declare const readTemplateManifest: (singleFileMode?: boolean) => Promise<TemplateManifest>;
export declare const generateTestResults: (writer: AwesomeDataWriter, store: AllureStore, trs: TestResult[], filter?: TestResultFilter) => Promise<AwesomeTestResult[]>;
export declare const generateTestCases: (writer: AwesomeDataWriter, trs: AwesomeTestResult[]) => Promise<void>;
export declare const generateTestEnvGroups: (writer: AwesomeDataWriter, groups: TestEnvGroup[]) => Promise<void>;
export declare const generateNav: (writer: AwesomeDataWriter, trs: AwesomeTestResult[], filename?: string) => Promise<void>;
export declare const generateTree: (writer: AwesomeDataWriter, treeFilename: string, labels: string[], tests: AwesomeTestResult[]) => Promise<void>;
export declare const generateEnvironmentJson: (writer: AwesomeDataWriter, env: EnvironmentItem[]) => Promise<void>;
export declare const generateEnvirontmentsList: (writer: AwesomeDataWriter, store: AllureStore) => Promise<void>;
export declare const generateVariables: (writer: AwesomeDataWriter, store: AllureStore) => Promise<void>;
export declare const generateStatistic: (writer: AwesomeDataWriter, data: {
    stats: Statistic;
    statsByEnv: Map<string, Statistic>;
    envs: string[];
}) => Promise<void>;
export declare const generateAttachmentsFiles: (writer: AwesomeDataWriter, attachmentLinks: AttachmentLink[], contentFunction: (id: string) => Promise<ResultFile | undefined>) => Promise<Map<string, string> | undefined>;
export declare const generateHistoryDataPoints: (writer: AwesomeDataWriter, store: AllureStore) => Promise<Map<string, string>>;
export declare const generateGlobals: (writer: AwesomeDataWriter, payload: {
    globalExitCode?: ExitCode;
    globalAttachments?: AttachmentLink[];
    globalErrors?: TestError[];
    contentFunction: (id: string) => Promise<ResultFile | undefined>;
}) => Promise<void>;
export declare const generateStaticFiles: (payload: AwesomeOptions & {
    id: string;
    allureVersion: string;
    reportFiles: ReportFiles;
    reportDataFiles: ReportFile[];
    reportUuid: string;
    reportName: string;
}) => Promise<void>;
