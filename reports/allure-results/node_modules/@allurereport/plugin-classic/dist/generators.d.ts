import { type AttachmentLink, type EnvironmentItem, type Statistic } from "@allurereport/core-api";
import { type AllureStore, type ReportFiles, type ResultFile } from "@allurereport/plugin-api";
import type { AwesomeTestResult } from "@allurereport/web-awesome";
import type { ClassicOptions, TemplateManifest } from "./model.js";
import type { ClassicDataWriter, ReportFile } from "./writer.js";
export declare const readTemplateManifest: (singleFileMode?: boolean) => Promise<TemplateManifest>;
export declare const generateTestResults: (writer: ClassicDataWriter, store: AllureStore) => Promise<AwesomeTestResult[]>;
export declare const generateTree: (writer: ClassicDataWriter, treeName: string, labels: string[], tests: AwesomeTestResult[]) => Promise<void>;
export declare const generateEnvironmentJson: (writer: ClassicDataWriter, env: EnvironmentItem[]) => Promise<void>;
export declare const generateStatistic: (writer: ClassicDataWriter, statistic: Statistic) => Promise<void>;
export declare const generatePieChart: (writer: ClassicDataWriter, statistic: Statistic) => Promise<void>;
export declare const generateAttachmentsFiles: (writer: ClassicDataWriter, attachmentLinks: AttachmentLink[], contentFunction: (id: string) => Promise<ResultFile | undefined>) => Promise<Map<string, string> | undefined>;
export declare const generateHistoryDataPoints: (writer: ClassicDataWriter, store: AllureStore) => Promise<Map<string, string>>;
export declare const generateStaticFiles: (payload: ClassicOptions & {
    allureVersion: string;
    reportFiles: ReportFiles;
    reportDataFiles: ReportFile[];
    reportUuid: string;
    reportName: string;
}) => Promise<void>;
export declare const generateTreeByCategories: (writer: ClassicDataWriter, treeName: string, tests: AwesomeTestResult[]) => Promise<void>;
