import type { ReportFiles } from "@allurereport/plugin-api";
export type ReportFile = {
    name: string;
    value: string;
};
export interface DashboardDataWriter {
    writeWidget<T>(fileName: string, data: T): Promise<void>;
}
export declare class FileSystemReportDataWriter implements DashboardDataWriter {
    private readonly output;
    constructor(output: string);
    writeWidget<T>(fileName: string, data: T): Promise<void>;
}
export declare class InMemoryDashboardDataWriter implements DashboardDataWriter {
    #private;
    writeWidget<T>(fileName: string, data: T): Promise<void>;
    reportFiles(): ReportFile[];
}
export declare class ReportFileDashboardDataWriter implements DashboardDataWriter {
    readonly reportFiles: ReportFiles;
    constructor(reportFiles: ReportFiles);
    writeWidget<T>(fileName: string, data: T): Promise<void>;
}
