import type { ShallowKnown, Unknown } from "../../../validation.js";
import type { XcArray, XcBool, XcDate, XcDouble, XcInt, XcObject, XcReference, XcString, XcURL, XcValue } from "./xcModel.js";
export declare const getType: <Type extends string>({ _type }: ShallowKnown<XcObject<Type>>) => string | undefined;
export declare const getUnionType: <Type extends string, const L extends readonly string[]>({ _type }: ShallowKnown<XcObject<Type>>, options: L) => ShallowKnown<L[number]> | undefined;
export declare const getValue: <Type extends string>(value: Unknown<XcValue<Type>>) => string | undefined;
export declare const getBool: (value: Unknown<XcBool>) => boolean;
export declare const getInt: (value: Unknown<XcInt>) => number | undefined;
export declare const getDouble: (value: Unknown<XcDouble>) => number | undefined;
export declare const getString: (value: Unknown<XcString>) => string | undefined;
export declare const getDate: (value: Unknown<XcDate>) => number | undefined;
export declare const getURL: (value: Unknown<XcURL>) => string | undefined;
export declare const getRef: (ref: Unknown<XcReference>) => string | undefined;
export declare const getArray: <Type extends string, Element extends XcObject<Type>>(array: Unknown<XcArray<Element>>) => Unknown<Element>[];
export declare const getStringArray: (array: Unknown<XcArray<XcString>>) => string[];
export declare const getObjectArray: <Type extends string, Element extends XcObject<Type>>(array: Unknown<XcArray<Element>>) => ShallowKnown<Element>[];
