import { ChartDataType, ChartType, severityLevels, statusesList } from "@allurereport/core-api";
import { severityColors, statusColors } from "./colors.js";
export const createTrendChartData = (getChart, getGroups, getColor) => {
    const chart = getChart();
    if (!chart) {
        return undefined;
    }
    const items = getGroups().reduce((acc, group) => {
        const pointsByGroupBy = chart.series[group]?.map((pointId) => {
            const point = chart.points[pointId];
            return {
                x: point.x,
                y: point.y,
            };
        }) ?? [];
        if (pointsByGroupBy.length) {
            acc.push({
                id: group.charAt(0).toUpperCase() + group.slice(1),
                data: pointsByGroupBy,
                color: getColor(group),
            });
        }
        return acc;
    }, []);
    return {
        type: chart.type,
        dataType: chart.dataType,
        mode: chart.mode,
        title: chart.title,
        items,
        slices: Object.values(chart.slices),
        min: chart.min,
        max: chart.max,
    };
};
export const createStatusTrendChartData = (chartId, res) => createTrendChartData(() => res[chartId], () => statusesList, (status) => statusColors[status]);
export const createSeverityTrendChartData = (chartId, res) => createTrendChartData(() => res[chartId], () => severityLevels, (severity) => severityColors[severity]);
export const createaTrendChartData = (chartId, chartData, res) => {
    if (chartData.dataType === ChartDataType.Status) {
        return createStatusTrendChartData(chartId, res);
    }
    else if (chartData.dataType === ChartDataType.Severity) {
        return createSeverityTrendChartData(chartId, res);
    }
};
export const createCharts = (res) => {
    return Object.entries(res).reduce((acc, [chartId, chart]) => {
        if (chart.type === ChartType.Trend) {
            const chartData = createaTrendChartData(chartId, chart, res);
            if (chartData) {
                acc[chartId] = chartData;
            }
        }
        else if ([ChartType.Pie, ChartType.HeatMap, ChartType.Bar, ChartType.Funnel, ChartType.TreeMap].includes(chart.type)) {
            acc[chartId] = chart;
        }
        return acc;
    }, {});
};
