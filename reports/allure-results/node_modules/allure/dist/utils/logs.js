import { mkdir, readFile, writeFile } from "node:fs/promises";
import { homedir } from "node:os";
import { join } from "node:path";
import { red } from "yoctocolors";
const LOGS_DIRECTORY = join(homedir(), ".allure", "logs");
export const getLogFileName = () => `${new Date().toISOString().replace(/:/g, "-")}.log`;
export const readLogs = async () => {
    await mkdir(LOGS_DIRECTORY, { recursive: true });
    const logFilePath = join(LOGS_DIRECTORY, getLogFileName());
    try {
        const logs = await readFile(logFilePath, "utf-8");
        return logs;
    }
    catch (err) {
        return "";
    }
};
export const logError = async (message, error) => {
    let logs = await readLogs();
    if (!logs) {
        logs += `${new Date().toISOString()}[ERROR] ${error.message}\n`;
    }
    else {
        logs += `\n${new Date().toISOString()}[ERROR] ${error.message}\n`;
    }
    if (error.stack) {
        logs += `${error.stack}\n`;
    }
    const logFilePath = join(LOGS_DIRECTORY, getLogFileName());
    await writeFile(logFilePath, logs, "utf-8");
    console.error(red(`${message}. Check logs for more details: ${logFilePath}`));
};
